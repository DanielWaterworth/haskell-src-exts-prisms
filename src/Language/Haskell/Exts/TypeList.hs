{-# LANGUAGE TemplateHaskell #-}

module Language.Haskell.Exts.TypeList where

import Language.Haskell.Exts.Syntax

types = [
    ''Module,
    ''ModuleHead,
    ''WarningText,
    ''ExportSpecList,
    ''ExportSpec,
    ''EWildcard,
    ''ImportDecl,
    ''ImportSpecList,
    ''ImportSpec,
    ''Assoc,
    ''Namespace,
    ''Decl,
    ''DeclHead,
    ''InstRule,
    ''InstHead,
    ''Binds,
    ''IPBind,
    ''PatternSynDirection,
    ''InjectivityInfo,
    ''ResultSig,
    ''ClassDecl,
    ''InstDecl,
    ''Deriving,
    ''DataOrNew,
    ''ConDecl,
    ''FieldDecl,
    ''QualConDecl,
    ''GadtDecl,
    ''BangType,
    ''Unpackedness,
    ''Match,
    ''Rhs,
    ''GuardedRhs,
    ''Context,
    ''FunDep,
    ''Asst,
    ''Type,
    ''Boxed,
    ''Kind,
    ''TyVarBind,
    ''Promoted,
    ''TypeEqn,
    ''Exp,
    ''Stmt,
    ''QualStmt,
    ''FieldUpdate,
    ''Alt,
    ''XAttr,
    ''Pat,
    ''PatField,
    ''PXAttr,
    ''RPat,
    ''RPatOp,
    ''Literal,
    ''Sign,
    ''ModuleName,
    ''QName,
    ''Name,
    ''QOp,
    ''Op,
    ''SpecialCon,
    ''CName,
    ''IPName,
    ''XName,
    ''Role,
    ''Bracket,
    ''Splice,
    ''Safety,
    ''CallConv,
    ''ModulePragma,
    ''Tool,
    ''Overlap,
    ''Rule,
    ''RuleVar,
    ''Activation,
    ''Annotation,
    ''BooleanFormula
  ]
